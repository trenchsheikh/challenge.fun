/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/end-of-stream";
exports.ids = ["vendor-chunks/end-of-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/end-of-stream/index.js":
/*!*********************************************!*\
  !*** ./node_modules/end-of-stream/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var once = __webpack_require__(/*! once */ \"(ssr)/./node_modules/once/once.js\");\nvar noop = function() {};\nvar qnt = global.Bare ? queueMicrotask : process.nextTick.bind(process);\nvar isRequest = function(stream) {\n    return stream.setHeader && typeof stream.abort === \"function\";\n};\nvar isChildProcess = function(stream) {\n    return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;\n};\nvar eos = function(stream, opts, callback) {\n    if (typeof opts === \"function\") return eos(stream, null, opts);\n    if (!opts) opts = {};\n    callback = once(callback || noop);\n    var ws = stream._writableState;\n    var rs = stream._readableState;\n    var readable = opts.readable || opts.readable !== false && stream.readable;\n    var writable = opts.writable || opts.writable !== false && stream.writable;\n    var cancelled = false;\n    var onlegacyfinish = function() {\n        if (!stream.writable) onfinish();\n    };\n    var onfinish = function() {\n        writable = false;\n        if (!readable) callback.call(stream);\n    };\n    var onend = function() {\n        readable = false;\n        if (!writable) callback.call(stream);\n    };\n    var onexit = function(exitCode) {\n        callback.call(stream, exitCode ? new Error(\"exited with error code: \" + exitCode) : null);\n    };\n    var onerror = function(err) {\n        callback.call(stream, err);\n    };\n    var onclose = function() {\n        qnt(onclosenexttick);\n    };\n    var onclosenexttick = function() {\n        if (cancelled) return;\n        if (readable && !(rs && rs.ended && !rs.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n        if (writable && !(ws && ws.ended && !ws.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n    };\n    var onrequest = function() {\n        stream.req.on(\"finish\", onfinish);\n    };\n    if (isRequest(stream)) {\n        stream.on(\"complete\", onfinish);\n        stream.on(\"abort\", onclose);\n        if (stream.req) onrequest();\n        else stream.on(\"request\", onrequest);\n    } else if (writable && !ws) {\n        stream.on(\"end\", onlegacyfinish);\n        stream.on(\"close\", onlegacyfinish);\n    }\n    if (isChildProcess(stream)) stream.on(\"exit\", onexit);\n    stream.on(\"end\", onend);\n    stream.on(\"finish\", onfinish);\n    if (opts.error !== false) stream.on(\"error\", onerror);\n    stream.on(\"close\", onclose);\n    return function() {\n        cancelled = true;\n        stream.removeListener(\"complete\", onfinish);\n        stream.removeListener(\"abort\", onclose);\n        stream.removeListener(\"request\", onrequest);\n        if (stream.req) stream.req.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"end\", onlegacyfinish);\n        stream.removeListener(\"close\", onlegacyfinish);\n        stream.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"exit\", onexit);\n        stream.removeListener(\"end\", onend);\n        stream.removeListener(\"error\", onerror);\n        stream.removeListener(\"close\", onclose);\n    };\n};\nmodule.exports = eos;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZW5kLW9mLXN0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUVuQixJQUFJQyxPQUFPLFlBQVk7QUFFdkIsSUFBSUMsTUFBTUMsT0FBT0MsSUFBSSxHQUFHQyxpQkFBaUJDLFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDRjtBQUUvRCxJQUFJRyxZQUFZLFNBQVNDLE1BQU07SUFDOUIsT0FBT0EsT0FBT0MsU0FBUyxJQUFJLE9BQU9ELE9BQU9FLEtBQUssS0FBSztBQUNwRDtBQUVBLElBQUlDLGlCQUFpQixTQUFTSCxNQUFNO0lBQ25DLE9BQU9BLE9BQU9JLEtBQUssSUFBSUMsTUFBTUMsT0FBTyxDQUFDTixPQUFPSSxLQUFLLEtBQUtKLE9BQU9JLEtBQUssQ0FBQ0csTUFBTSxLQUFLO0FBQy9FO0FBRUEsSUFBSUMsTUFBTSxTQUFTUixNQUFNLEVBQUVTLElBQUksRUFBRUMsUUFBUTtJQUN4QyxJQUFJLE9BQU9ELFNBQVMsWUFBWSxPQUFPRCxJQUFJUixRQUFRLE1BQU1TO0lBQ3pELElBQUksQ0FBQ0EsTUFBTUEsT0FBTyxDQUFDO0lBRW5CQyxXQUFXckIsS0FBS3FCLFlBQVluQjtJQUU1QixJQUFJb0IsS0FBS1gsT0FBT1ksY0FBYztJQUM5QixJQUFJQyxLQUFLYixPQUFPYyxjQUFjO0lBQzlCLElBQUlDLFdBQVdOLEtBQUtNLFFBQVEsSUFBS04sS0FBS00sUUFBUSxLQUFLLFNBQVNmLE9BQU9lLFFBQVE7SUFDM0UsSUFBSUMsV0FBV1AsS0FBS08sUUFBUSxJQUFLUCxLQUFLTyxRQUFRLEtBQUssU0FBU2hCLE9BQU9nQixRQUFRO0lBQzNFLElBQUlDLFlBQVk7SUFFaEIsSUFBSUMsaUJBQWlCO1FBQ3BCLElBQUksQ0FBQ2xCLE9BQU9nQixRQUFRLEVBQUVHO0lBQ3ZCO0lBRUEsSUFBSUEsV0FBVztRQUNkSCxXQUFXO1FBQ1gsSUFBSSxDQUFDRCxVQUFVTCxTQUFTVSxJQUFJLENBQUNwQjtJQUM5QjtJQUVBLElBQUlxQixRQUFRO1FBQ1hOLFdBQVc7UUFDWCxJQUFJLENBQUNDLFVBQVVOLFNBQVNVLElBQUksQ0FBQ3BCO0lBQzlCO0lBRUEsSUFBSXNCLFNBQVMsU0FBU0MsUUFBUTtRQUM3QmIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUXVCLFdBQVcsSUFBSUMsTUFBTSw2QkFBNkJELFlBQVk7SUFDckY7SUFFQSxJQUFJRSxVQUFVLFNBQVNDLEdBQUc7UUFDekJoQixTQUFTVSxJQUFJLENBQUNwQixRQUFRMEI7SUFDdkI7SUFFQSxJQUFJQyxVQUFVO1FBQ2JuQyxJQUFJb0M7SUFDTDtJQUVBLElBQUlBLGtCQUFrQjtRQUNyQixJQUFJWCxXQUFXO1FBQ2YsSUFBSUYsWUFBWSxDQUFFRixDQUFBQSxNQUFPQSxHQUFHZ0IsS0FBSyxJQUFJLENBQUNoQixHQUFHaUIsU0FBUyxHQUFJLE9BQU9wQixTQUFTVSxJQUFJLENBQUNwQixRQUFRLElBQUl3QixNQUFNO1FBQzdGLElBQUlSLFlBQVksQ0FBRUwsQ0FBQUEsTUFBT0EsR0FBR2tCLEtBQUssSUFBSSxDQUFDbEIsR0FBR21CLFNBQVMsR0FBSSxPQUFPcEIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUSxJQUFJd0IsTUFBTTtJQUM5RjtJQUVBLElBQUlPLFlBQVk7UUFDZi9CLE9BQU9nQyxHQUFHLENBQUNDLEVBQUUsQ0FBQyxVQUFVZDtJQUN6QjtJQUVBLElBQUlwQixVQUFVQyxTQUFTO1FBQ3RCQSxPQUFPaUMsRUFBRSxDQUFDLFlBQVlkO1FBQ3RCbkIsT0FBT2lDLEVBQUUsQ0FBQyxTQUFTTjtRQUNuQixJQUFJM0IsT0FBT2dDLEdBQUcsRUFBRUQ7YUFDWC9CLE9BQU9pQyxFQUFFLENBQUMsV0FBV0Y7SUFDM0IsT0FBTyxJQUFJZixZQUFZLENBQUNMLElBQUk7UUFDM0JYLE9BQU9pQyxFQUFFLENBQUMsT0FBT2Y7UUFDakJsQixPQUFPaUMsRUFBRSxDQUFDLFNBQVNmO0lBQ3BCO0lBRUEsSUFBSWYsZUFBZUgsU0FBU0EsT0FBT2lDLEVBQUUsQ0FBQyxRQUFRWDtJQUU5Q3RCLE9BQU9pQyxFQUFFLENBQUMsT0FBT1o7SUFDakJyQixPQUFPaUMsRUFBRSxDQUFDLFVBQVVkO0lBQ3BCLElBQUlWLEtBQUt5QixLQUFLLEtBQUssT0FBT2xDLE9BQU9pQyxFQUFFLENBQUMsU0FBU1I7SUFDN0N6QixPQUFPaUMsRUFBRSxDQUFDLFNBQVNOO0lBRW5CLE9BQU87UUFDTlYsWUFBWTtRQUNaakIsT0FBT21DLGNBQWMsQ0FBQyxZQUFZaEI7UUFDbENuQixPQUFPbUMsY0FBYyxDQUFDLFNBQVNSO1FBQy9CM0IsT0FBT21DLGNBQWMsQ0FBQyxXQUFXSjtRQUNqQyxJQUFJL0IsT0FBT2dDLEdBQUcsRUFBRWhDLE9BQU9nQyxHQUFHLENBQUNHLGNBQWMsQ0FBQyxVQUFVaEI7UUFDcERuQixPQUFPbUMsY0FBYyxDQUFDLE9BQU9qQjtRQUM3QmxCLE9BQU9tQyxjQUFjLENBQUMsU0FBU2pCO1FBQy9CbEIsT0FBT21DLGNBQWMsQ0FBQyxVQUFVaEI7UUFDaENuQixPQUFPbUMsY0FBYyxDQUFDLFFBQVFiO1FBQzlCdEIsT0FBT21DLGNBQWMsQ0FBQyxPQUFPZDtRQUM3QnJCLE9BQU9tQyxjQUFjLENBQUMsU0FBU1Y7UUFDL0J6QixPQUFPbUMsY0FBYyxDQUFDLFNBQVNSO0lBQ2hDO0FBQ0Q7QUFFQVMsT0FBT0MsT0FBTyxHQUFHN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2wtcG9ydGZvbGlvLWFwcC8uL25vZGVfbW9kdWxlcy9lbmQtb2Ytc3RyZWFtL2luZGV4LmpzP2M0MGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG9uY2UgPSByZXF1aXJlKCdvbmNlJyk7XG5cbnZhciBub29wID0gZnVuY3Rpb24oKSB7fTtcblxudmFyIHFudCA9IGdsb2JhbC5CYXJlID8gcXVldWVNaWNyb3Rhc2sgOiBwcm9jZXNzLm5leHRUaWNrLmJpbmQocHJvY2Vzcyk7XG5cbnZhciBpc1JlcXVlc3QgPSBmdW5jdGlvbihzdHJlYW0pIHtcblx0cmV0dXJuIHN0cmVhbS5zZXRIZWFkZXIgJiYgdHlwZW9mIHN0cmVhbS5hYm9ydCA9PT0gJ2Z1bmN0aW9uJztcbn07XG5cbnZhciBpc0NoaWxkUHJvY2VzcyA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuXHRyZXR1cm4gc3RyZWFtLnN0ZGlvICYmIEFycmF5LmlzQXJyYXkoc3RyZWFtLnN0ZGlvKSAmJiBzdHJlYW0uc3RkaW8ubGVuZ3RoID09PSAzXG59O1xuXG52YXIgZW9zID0gZnVuY3Rpb24oc3RyZWFtLCBvcHRzLCBjYWxsYmFjaykge1xuXHRpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIHJldHVybiBlb3Moc3RyZWFtLCBudWxsLCBvcHRzKTtcblx0aWYgKCFvcHRzKSBvcHRzID0ge307XG5cblx0Y2FsbGJhY2sgPSBvbmNlKGNhbGxiYWNrIHx8IG5vb3ApO1xuXG5cdHZhciB3cyA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcblx0dmFyIHJzID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuXHR2YXIgcmVhZGFibGUgPSBvcHRzLnJlYWRhYmxlIHx8IChvcHRzLnJlYWRhYmxlICE9PSBmYWxzZSAmJiBzdHJlYW0ucmVhZGFibGUpO1xuXHR2YXIgd3JpdGFibGUgPSBvcHRzLndyaXRhYmxlIHx8IChvcHRzLndyaXRhYmxlICE9PSBmYWxzZSAmJiBzdHJlYW0ud3JpdGFibGUpO1xuXHR2YXIgY2FuY2VsbGVkID0gZmFsc2U7XG5cblx0dmFyIG9ubGVnYWN5ZmluaXNoID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCFzdHJlYW0ud3JpdGFibGUpIG9uZmluaXNoKCk7XG5cdH07XG5cblx0dmFyIG9uZmluaXNoID0gZnVuY3Rpb24oKSB7XG5cdFx0d3JpdGFibGUgPSBmYWxzZTtcblx0XHRpZiAoIXJlYWRhYmxlKSBjYWxsYmFjay5jYWxsKHN0cmVhbSk7XG5cdH07XG5cblx0dmFyIG9uZW5kID0gZnVuY3Rpb24oKSB7XG5cdFx0cmVhZGFibGUgPSBmYWxzZTtcblx0XHRpZiAoIXdyaXRhYmxlKSBjYWxsYmFjay5jYWxsKHN0cmVhbSk7XG5cdH07XG5cblx0dmFyIG9uZXhpdCA9IGZ1bmN0aW9uKGV4aXRDb2RlKSB7XG5cdFx0Y2FsbGJhY2suY2FsbChzdHJlYW0sIGV4aXRDb2RlID8gbmV3IEVycm9yKCdleGl0ZWQgd2l0aCBlcnJvciBjb2RlOiAnICsgZXhpdENvZGUpIDogbnVsbCk7XG5cdH07XG5cblx0dmFyIG9uZXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcblx0XHRjYWxsYmFjay5jYWxsKHN0cmVhbSwgZXJyKTtcblx0fTtcblxuXHR2YXIgb25jbG9zZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHFudChvbmNsb3NlbmV4dHRpY2spO1xuXHR9O1xuXG5cdHZhciBvbmNsb3NlbmV4dHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoY2FuY2VsbGVkKSByZXR1cm47XG5cdFx0aWYgKHJlYWRhYmxlICYmICEocnMgJiYgKHJzLmVuZGVkICYmICFycy5kZXN0cm95ZWQpKSkgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBuZXcgRXJyb3IoJ3ByZW1hdHVyZSBjbG9zZScpKTtcblx0XHRpZiAod3JpdGFibGUgJiYgISh3cyAmJiAod3MuZW5kZWQgJiYgIXdzLmRlc3Ryb3llZCkpKSByZXR1cm4gY2FsbGJhY2suY2FsbChzdHJlYW0sIG5ldyBFcnJvcigncHJlbWF0dXJlIGNsb3NlJykpO1xuXHR9O1xuXG5cdHZhciBvbnJlcXVlc3QgPSBmdW5jdGlvbigpIHtcblx0XHRzdHJlYW0ucmVxLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG5cdH07XG5cblx0aWYgKGlzUmVxdWVzdChzdHJlYW0pKSB7XG5cdFx0c3RyZWFtLm9uKCdjb21wbGV0ZScsIG9uZmluaXNoKTtcblx0XHRzdHJlYW0ub24oJ2Fib3J0Jywgb25jbG9zZSk7XG5cdFx0aWYgKHN0cmVhbS5yZXEpIG9ucmVxdWVzdCgpO1xuXHRcdGVsc2Ugc3RyZWFtLm9uKCdyZXF1ZXN0Jywgb25yZXF1ZXN0KTtcblx0fSBlbHNlIGlmICh3cml0YWJsZSAmJiAhd3MpIHsgLy8gbGVnYWN5IHN0cmVhbXNcblx0XHRzdHJlYW0ub24oJ2VuZCcsIG9ubGVnYWN5ZmluaXNoKTtcblx0XHRzdHJlYW0ub24oJ2Nsb3NlJywgb25sZWdhY3lmaW5pc2gpO1xuXHR9XG5cblx0aWYgKGlzQ2hpbGRQcm9jZXNzKHN0cmVhbSkpIHN0cmVhbS5vbignZXhpdCcsIG9uZXhpdCk7XG5cblx0c3RyZWFtLm9uKCdlbmQnLCBvbmVuZCk7XG5cdHN0cmVhbS5vbignZmluaXNoJywgb25maW5pc2gpO1xuXHRpZiAob3B0cy5lcnJvciAhPT0gZmFsc2UpIHN0cmVhbS5vbignZXJyb3InLCBvbmVycm9yKTtcblx0c3RyZWFtLm9uKCdjbG9zZScsIG9uY2xvc2UpO1xuXG5cdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRjYW5jZWxsZWQgPSB0cnVlO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY29tcGxldGUnLCBvbmZpbmlzaCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdhYm9ydCcsIG9uY2xvc2UpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcigncmVxdWVzdCcsIG9ucmVxdWVzdCk7XG5cdFx0aWYgKHN0cmVhbS5yZXEpIHN0cmVhbS5yZXEucmVtb3ZlTGlzdGVuZXIoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9ubGVnYWN5ZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25sZWdhY3lmaW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXhpdCcsIG9uZXhpdCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcblx0fTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW9zO1xuIl0sIm5hbWVzIjpbIm9uY2UiLCJyZXF1aXJlIiwibm9vcCIsInFudCIsImdsb2JhbCIsIkJhcmUiLCJxdWV1ZU1pY3JvdGFzayIsInByb2Nlc3MiLCJuZXh0VGljayIsImJpbmQiLCJpc1JlcXVlc3QiLCJzdHJlYW0iLCJzZXRIZWFkZXIiLCJhYm9ydCIsImlzQ2hpbGRQcm9jZXNzIiwic3RkaW8iLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJlb3MiLCJvcHRzIiwiY2FsbGJhY2siLCJ3cyIsIl93cml0YWJsZVN0YXRlIiwicnMiLCJfcmVhZGFibGVTdGF0ZSIsInJlYWRhYmxlIiwid3JpdGFibGUiLCJjYW5jZWxsZWQiLCJvbmxlZ2FjeWZpbmlzaCIsIm9uZmluaXNoIiwiY2FsbCIsIm9uZW5kIiwib25leGl0IiwiZXhpdENvZGUiLCJFcnJvciIsIm9uZXJyb3IiLCJlcnIiLCJvbmNsb3NlIiwib25jbG9zZW5leHR0aWNrIiwiZW5kZWQiLCJkZXN0cm95ZWQiLCJvbnJlcXVlc3QiLCJyZXEiLCJvbiIsImVycm9yIiwicmVtb3ZlTGlzdGVuZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/end-of-stream/index.js\n");

/***/ })

};
;