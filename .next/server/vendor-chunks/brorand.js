/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/brorand";
exports.ids = ["vendor-chunks/brorand"];
exports.modules = {

/***/ "(ssr)/./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var r;\nmodule.exports = function rand(len) {\n    if (!r) r = new Rand(null);\n    return r.generate(len);\n};\nfunction Rand(rand) {\n    this.rand = rand;\n}\nmodule.exports.Rand = Rand;\nRand.prototype.generate = function generate(len) {\n    return this._rand(len);\n};\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n    if (this.rand.getBytes) return this.rand.getBytes(n);\n    var res = new Uint8Array(n);\n    for(var i = 0; i < res.length; i++)res[i] = this.rand.getByte();\n    return res;\n};\nif (typeof self === \"object\") {\n    if (self.crypto && self.crypto.getRandomValues) {\n        // Modern browsers\n        Rand.prototype._rand = function _rand(n) {\n            var arr = new Uint8Array(n);\n            self.crypto.getRandomValues(arr);\n            return arr;\n        };\n    } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n        // IE\n        Rand.prototype._rand = function _rand(n) {\n            var arr = new Uint8Array(n);\n            self.msCrypto.getRandomValues(arr);\n            return arr;\n        };\n    // Safari's WebWorkers do not have `crypto`\n    } else if (false) {}\n} else {\n    // Node.js or Web worker with no crypto support\n    try {\n        var crypto = __webpack_require__(/*! crypto */ \"crypto\");\n        if (typeof crypto.randomBytes !== \"function\") throw new Error(\"Not supported\");\n        Rand.prototype._rand = function _rand(n) {\n            return crypto.randomBytes(n);\n        };\n    } catch (e) {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJvcmFuZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQTtBQUVKQyxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsS0FBS0MsR0FBRztJQUNoQyxJQUFJLENBQUNKLEdBQ0hBLElBQUksSUFBSUssS0FBSztJQUVmLE9BQU9MLEVBQUVNLFFBQVEsQ0FBQ0Y7QUFDcEI7QUFFQSxTQUFTQyxLQUFLRixJQUFJO0lBQ2hCLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtBQUNkO0FBQ0FGLG1CQUFtQixHQUFHSTtBQUV0QkEsS0FBS0UsU0FBUyxDQUFDRCxRQUFRLEdBQUcsU0FBU0EsU0FBU0YsR0FBRztJQUM3QyxPQUFPLElBQUksQ0FBQ0ksS0FBSyxDQUFDSjtBQUNwQjtBQUVBLGlDQUFpQztBQUNqQ0MsS0FBS0UsU0FBUyxDQUFDQyxLQUFLLEdBQUcsU0FBU0EsTUFBTUMsQ0FBQztJQUNyQyxJQUFJLElBQUksQ0FBQ04sSUFBSSxDQUFDTyxRQUFRLEVBQ3BCLE9BQU8sSUFBSSxDQUFDUCxJQUFJLENBQUNPLFFBQVEsQ0FBQ0Q7SUFFNUIsSUFBSUUsTUFBTSxJQUFJQyxXQUFXSDtJQUN6QixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUYsSUFBSUcsTUFBTSxFQUFFRCxJQUM5QkYsR0FBRyxDQUFDRSxFQUFFLEdBQUcsSUFBSSxDQUFDVixJQUFJLENBQUNZLE9BQU87SUFDNUIsT0FBT0o7QUFDVDtBQUVBLElBQUksT0FBT0ssU0FBUyxVQUFVO0lBQzVCLElBQUlBLEtBQUtDLE1BQU0sSUFBSUQsS0FBS0MsTUFBTSxDQUFDQyxlQUFlLEVBQUU7UUFDOUMsa0JBQWtCO1FBQ2xCYixLQUFLRSxTQUFTLENBQUNDLEtBQUssR0FBRyxTQUFTQSxNQUFNQyxDQUFDO1lBQ3JDLElBQUlVLE1BQU0sSUFBSVAsV0FBV0g7WUFDekJPLEtBQUtDLE1BQU0sQ0FBQ0MsZUFBZSxDQUFDQztZQUM1QixPQUFPQTtRQUNUO0lBQ0YsT0FBTyxJQUFJSCxLQUFLSSxRQUFRLElBQUlKLEtBQUtJLFFBQVEsQ0FBQ0YsZUFBZSxFQUFFO1FBQ3pELEtBQUs7UUFDTGIsS0FBS0UsU0FBUyxDQUFDQyxLQUFLLEdBQUcsU0FBU0EsTUFBTUMsQ0FBQztZQUNyQyxJQUFJVSxNQUFNLElBQUlQLFdBQVdIO1lBQ3pCTyxLQUFLSSxRQUFRLENBQUNGLGVBQWUsQ0FBQ0M7WUFDOUIsT0FBT0E7UUFDVDtJQUVGLDJDQUEyQztJQUMzQyxPQUFPLElBQUksS0FBa0IsRUFBVSxFQUt0QztBQUNILE9BQU87SUFDTCwrQ0FBK0M7SUFDL0MsSUFBSTtRQUNGLElBQUlGLFNBQVNLLG1CQUFPQSxDQUFDO1FBQ3JCLElBQUksT0FBT0wsT0FBT00sV0FBVyxLQUFLLFlBQ2hDLE1BQU0sSUFBSUYsTUFBTTtRQUVsQmhCLEtBQUtFLFNBQVMsQ0FBQ0MsS0FBSyxHQUFHLFNBQVNBLE1BQU1DLENBQUM7WUFDckMsT0FBT1EsT0FBT00sV0FBVyxDQUFDZDtRQUM1QjtJQUNGLEVBQUUsT0FBT2UsR0FBRyxDQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2wtcG9ydGZvbGlvLWFwcC8uL25vZGVfbW9kdWxlcy9icm9yYW5kL2luZGV4LmpzPzY1MGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmFuZChsZW4pIHtcbiAgaWYgKCFyKVxuICAgIHIgPSBuZXcgUmFuZChudWxsKTtcblxuICByZXR1cm4gci5nZW5lcmF0ZShsZW4pO1xufTtcblxuZnVuY3Rpb24gUmFuZChyYW5kKSB7XG4gIHRoaXMucmFuZCA9IHJhbmQ7XG59XG5tb2R1bGUuZXhwb3J0cy5SYW5kID0gUmFuZDtcblxuUmFuZC5wcm90b3R5cGUuZ2VuZXJhdGUgPSBmdW5jdGlvbiBnZW5lcmF0ZShsZW4pIHtcbiAgcmV0dXJuIHRoaXMuX3JhbmQobGVuKTtcbn07XG5cbi8vIEVtdWxhdGUgY3J5cHRvIEFQSSB1c2luZyByYW5keVxuUmFuZC5wcm90b3R5cGUuX3JhbmQgPSBmdW5jdGlvbiBfcmFuZChuKSB7XG4gIGlmICh0aGlzLnJhbmQuZ2V0Qnl0ZXMpXG4gICAgcmV0dXJuIHRoaXMucmFuZC5nZXRCeXRlcyhuKTtcblxuICB2YXIgcmVzID0gbmV3IFVpbnQ4QXJyYXkobik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzLmxlbmd0aDsgaSsrKVxuICAgIHJlc1tpXSA9IHRoaXMucmFuZC5nZXRCeXRlKCk7XG4gIHJldHVybiByZXM7XG59O1xuXG5pZiAodHlwZW9mIHNlbGYgPT09ICdvYmplY3QnKSB7XG4gIGlmIChzZWxmLmNyeXB0byAmJiBzZWxmLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAvLyBNb2Rlcm4gYnJvd3NlcnNcbiAgICBSYW5kLnByb3RvdHlwZS5fcmFuZCA9IGZ1bmN0aW9uIF9yYW5kKG4pIHtcbiAgICAgIHZhciBhcnIgPSBuZXcgVWludDhBcnJheShuKTtcbiAgICAgIHNlbGYuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhhcnIpO1xuICAgICAgcmV0dXJuIGFycjtcbiAgICB9O1xuICB9IGVsc2UgaWYgKHNlbGYubXNDcnlwdG8gJiYgc2VsZi5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAvLyBJRVxuICAgIFJhbmQucHJvdG90eXBlLl9yYW5kID0gZnVuY3Rpb24gX3JhbmQobikge1xuICAgICAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KG4pO1xuICAgICAgc2VsZi5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyKTtcbiAgICAgIHJldHVybiBhcnI7XG4gICAgfTtcblxuICAvLyBTYWZhcmkncyBXZWJXb3JrZXJzIGRvIG5vdCBoYXZlIGBjcnlwdG9gXG4gIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHtcbiAgICAvLyBPbGQganVua1xuICAgIFJhbmQucHJvdG90eXBlLl9yYW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vdCBpbXBsZW1lbnRlZCB5ZXQnKTtcbiAgICB9O1xuICB9XG59IGVsc2Uge1xuICAvLyBOb2RlLmpzIG9yIFdlYiB3b3JrZXIgd2l0aCBubyBjcnlwdG8gc3VwcG9ydFxuICB0cnkge1xuICAgIHZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbiAgICBpZiAodHlwZW9mIGNyeXB0by5yYW5kb21CeXRlcyAhPT0gJ2Z1bmN0aW9uJylcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm90IHN1cHBvcnRlZCcpO1xuXG4gICAgUmFuZC5wcm90b3R5cGUuX3JhbmQgPSBmdW5jdGlvbiBfcmFuZChuKSB7XG4gICAgICByZXR1cm4gY3J5cHRvLnJhbmRvbUJ5dGVzKG4pO1xuICAgIH07XG4gIH0gY2F0Y2ggKGUpIHtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInIiLCJtb2R1bGUiLCJleHBvcnRzIiwicmFuZCIsImxlbiIsIlJhbmQiLCJnZW5lcmF0ZSIsInByb3RvdHlwZSIsIl9yYW5kIiwibiIsImdldEJ5dGVzIiwicmVzIiwiVWludDhBcnJheSIsImkiLCJsZW5ndGgiLCJnZXRCeXRlIiwic2VsZiIsImNyeXB0byIsImdldFJhbmRvbVZhbHVlcyIsImFyciIsIm1zQ3J5cHRvIiwiRXJyb3IiLCJyZXF1aXJlIiwicmFuZG9tQnl0ZXMiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/brorand/index.js\n");

/***/ })

};
;